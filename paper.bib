@techreport{mcnptools2022,
  author       = {Bates, Cameron R. and Brown, Forrest and Burns, Kimberly and others},
  title        = {The MCNPTools Package: Installation and Use},
  institution  = {Los Alamos National Laboratory},
  number       = {LA-UR-22-28935},
  year         = {2022},
  doi          = {10.2172/1884737},
  url          = {https://github.com/lanl/mcnptools},
  note         = {Tools for MCNP output analysis including support for PTRAC and MCTAL files【90026481949257†L272-L279】.}
}

@techreport{easyptrac2018,
  author       = {Institut de Radioprotection et de S\'urete\' Nucle\'aire (IRSN)},
  title        = {Easy PTRAC: une application pour l'analyse des fichiers MCNP PTRAC},
  institution  = {IRSN},
  year         = {2018},
  url          = {https://www.irsn.fr},
  note         = {Tool that reads MCNP PTRAC files and applies double filtering to select histories and events, exporting the results to Excel to simplify analysis【257826074072848†L25-L38】.}
}

@misc{ipostumaMCNPtools,
  author       = {Posituma, I. and Contributors},
  title        = {MCNPtools scripts},
  howpublished = {GitHub repository},
  year         = {2019},
  url          = {https://github.com/ipostuma/MCNPtools},
  note         = {Python scripts that read MCTAL files and produce per-tally files for plotting and analysis【904673896767921†L271-L287】.}
}

@misc{mc_tools,
  author       = {Kbat and Contributors},
  title        = {mc-tools: Utilities for MCNP tallies},
  howpublished = {GitHub repository},
  year         = {2014},
  url          = {https://github.com/kbat/mc-tools},
  note         = {Collection of tools providing an API for reading MCTAL files and converters to ROOT, XML and plain text formats【253561280248214†L294-L305】.}
}

@misc{f4enix,
  author       = {Fusion For Energy},
  title        = {F4Enix},
  howpublished = {GitHub repository},
  year         = {2020},
  url          = {https://github.com/fusion-for-energy/f4enix},
  note         = {Python modules for preparing and analysing MCNP input and output files, including support for MCTAL, MESHTAL, RSSA and EEOUT files【572651672967624†L40-L62】.}
}

@misc{pyne,
  author       = {Scopatz, Anthony and Wilson, Paul and others},
  title        = {PyNE: The Nuclear Engineering Toolkit (MCNP module)},
  howpublished = {GitHub repository},
  year         = {2011},
  url          = {https://github.com/pyne/pyne},
  note         = {PyNE's mcnp module parses MCNP output data and includes classes for MESHTAL files and a PtracReader for binary PTRAC files【113936692095840†L18-L27】.}
}

@misc{sandy,
  author       = {Fiorito, Luca and Collaboration},
  title        = {SANDY: mctal module},
  howpublished = {GitHub repository},
  year         = {2017},
  url          = {https://github.com/luca-fiorito-11/sandy},
  note         = {Container for MCNP MCTAL tallies represented as a pandas DataFrame with bin columns and access to tally data【58500239440403†L29-L69】.}
}

@misc{mcnpy,
  author       = {Riley, James and Brown, Forrest and others},
  title        = {MCNPy: A Python interface to MCNP},
  howpublished = {Conference proceedings},
  year         = {2022},
  note         = {Provides a model-driven Python interface to create and modify MCNP input files, integrating the code into modern workflows【382168637697268†L36-L54】.}
}

@misc{easy_pert,
  author       = {Faust and MCNPTools developers},
  title        = {Easy\_PERT: Sensitivity calculation tool for MCNP},
  howpublished = {Presentation},
  year         = {2021},
  note         = {Demonstrates how Faust and MCNPTools can be used to write PERT cards and parse MCTAL files for sensitivity analysis【244070339389063†L43-L46】.}
}