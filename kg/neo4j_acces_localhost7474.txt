http://localhost:7474/browser/

username : neo4j
password : decima123 ou neo4j (default)

Vider la base avant un import propre
MATCH (n) DETACH DELETE n

// L’ensemble du graphe 300 noeuds max:
MATCH (n)-[r]->(m) RETURN n, r, m

MATCH (n)
RETURN n.name AS id, n.value AS value, n.description AS description

// L’ensemble du graphe sauf Dictionnaires + elements dico:
MATCH (n)-[r]->(m)
WHERE NOT n:Dictionary AND NOT m:Dictionary
  AND NOT n:ParticleCode AND NOT m:ParticleCode
  AND NOT n:ReactionCode AND NOT m:ReactionCode
  AND NOT n:ZAIDCode AND NOT m:ZAIDCode
RETURN n, r, m

types exacts de relations dans Neo4j 
MATCH ()-[r]->() RETURN DISTINCT type(r)
 
Requete la synthaxe PTRAC pour SRC SUR BNK TER LST COL 
MATCH (n:EnumValue)
WHERE n.may_contain_fields IS NOT NULL
RETURN n.name, n.may_contain_fields


Vérifier toutes les connexions entre classes, méthodes, attributs, enums, etc
MATCH (a)-[r]->(b)
RETURN a.name, labels(a), type(r), b.name, labels(b)

Voir les Enum et toutes leurs valeurs associées
MATCH (e:Enum)-[:HAS_ENUM_VALUE]->(val:EnumValue)
RETURN e.name AS enum, val.name AS value_name, val.value, val.description
ORDER BY e.name, val.value

Voir les valeurs (EnumValue) et leurs propriétés
MATCH (val:EnumValue)
RETURN val.name, val.value, val.description

Voir tous les nœuds avec leurs labels et propriétés
MATCH (n)
RETURN n.name, labels(n), n.value, n.description



// propriétés
MATCH (val:EnumValue) RETURN val.name, val.value, val.description